<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
			"-//mybatis.org//DTD Mapper 3.0//EN" 
			"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
			
<mapper namespace="com.itbank.model.BoardDAO">

	<select id="selectBoardCount" resultType="int" parameterType="hashmap">
		select count(*) from board 
			where deleted='n'
			<if test="search.equals('') == false">
				and ${type} like '%${search}%'			
			</if>
	</select>
	
	<select id="selectAll" parameterType="hashmap" resultType="board">
		select * from board
			where 
				deleted = 'n' 
				<if test="search.equals('') == false">
					and ${type} like '%${search}%'			
				</if>
			order by 
				idx desc
			offset #{offset} rows
			fetch first #{perPage} rows only
	</select>
	
	<select id="selectOne" parameterType="int" resultType="board">
		select * from board where idx = #{idx}
	</select>
	
	<insert id="insert" parameterType="board">
		insert into 
		    board 
		        (idx, title, writer, content, password, uploadFile, ipaddr)
		    values
		        (board_seq.nextval, 
		        	#{title}, 
		        	#{writer}, 
		        	#{content}, 
		        	#{password}, 
		        	'${uploadFile}', 
		        	#{ipaddr}
		        )
	</insert>
	
	<select id="selectMaxIdx" resultType="int">
		select max(idx) from board
	</select>
	
	<update id="updateViewCount" parameterType="int">
		update board set viewCount = viewCount + 1 where idx = #{idx}
	</update>
	
	<update id="deleteBoard" parameterType="hashmap">
		update board 
			set deleted = 'y'
			where
				idx = #{idx} and
				password = #{password}
	</update>
	
	<select id="checkPassword" resultType="int" parameterType="board">
		select idx from board 
			where
				idx = #{idx} and
				password = #{password}
	</select>
	
	<update id="modify" parameterType="board">
		update board set
			title = #{title},
			writer = #{writer},
			content = #{content},
			uploadFile = '${uploadFile}',
			ipaddr = #{ipaddr}
		where
			idx = #{idx} and
			password = #{password}
	</update>
	
	<select id="selectReplyList" parameterType="int" resultType="reply">
		select * from reply
			where bnum = #{idx}
			order by idx
	</select>
	
	<insert id="insertReply" parameterType="reply">
		insert into reply values (
			reply_seq.nextval,
			#{bnum}, #{writer}, #{content}, #{password}
		)
	</insert>
	
	<update id="deleteReply" parameterType="hashmap">
<!-- 		update reply  -->
<!-- 			set content = '삭제된 댓글입니다.' -->
<!-- 			where  -->
<!-- 			idx = #{idx} and -->
<!-- 			password = #{password} -->
		delete reply
			where
				idx = #{idx} and
				password = #{password}
	</update>
	
</mapper>





